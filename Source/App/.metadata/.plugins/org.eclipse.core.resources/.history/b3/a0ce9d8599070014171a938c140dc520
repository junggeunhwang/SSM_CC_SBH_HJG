package com.ssm.cyclists.controller.activity;

import com.ssm.cyclists.R;
import com.ssm.cyclists.controller.fragment.CruiseFragment;
import com.ssm.cyclists.controller.fragment.CruiseTwoFragment;

import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.support.v13.app.FragmentStatePagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;


public class CruiseContainerActivity extends Activity {

	static String TAG = CruiseContainerActivity.class.getSimpleName();
	
	private static CruiseFragment mCruiseFragment = new CruiseFragment();
	private static CruiseTwoFragment mCruiseTwoFragment = new CruiseTwoFragment();

	
	private ViewPager mPager;
	private PageAdapter mAdapter;
	private CruiseContainerBroadcastReceiver br;
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.activity_cruise_container);
		mAdapter = new PageAdapter(getFragmentManager());

		mPager = (ViewPager) findViewById(R.id.container);
		mPager.setAdapter(mAdapter);
		mPager.setCurrentItem(0);
		IntentFilter intent_filter = new IntentFilter();
		intent_filter.addAction("UPDATE_CRUISE_INFO");
		intent_filter.addCategory(Intent.CATEGORY_DEFAULT);
		br = new CruiseContainerBroadcastReceiver();
		registerReceiver(br, intent_filter);
	}
	@Override
	protected void onStop() {
		unregisterReceiver(br);
		br = null;
		super.onStop();
	}
	
	
	

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.cruise_container, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	private static final class PageAdapter extends FragmentStatePagerAdapter {

		public PageAdapter(FragmentManager fragmentManager) {
			super(fragmentManager);
		}

		@Override
		public Fragment getItem(int position) {
			if(position == 0)
			{
				return mCruiseFragment;
			}
			else if(position == 1){
				return mCruiseTwoFragment;
			}
			
			return null;
		}

		@Override
		public int getCount() {
			return 2;
		}

	}

	
	private class CruiseContainerBroadcastReceiver extends BroadcastReceiver{

		@Override
		public void onReceive(Context context, Intent intent) {
			String type = intent.getStringExtra("type");
			if(type.equals("UPDATE_CRUISE_INFO")){
				mCruiseFragment.updateCruiseInfo();
				Log.d(TAG,"UPDATE_CRUISE_INFO");
			}
		}
	}
	
	public static CruiseFragment getmCruiseFragment() {
		return mCruiseFragment;
	}
	

	public static CruiseTwoFragment getmCruiseTwoFragment() {
		return mCruiseTwoFragment;
	}
}
