package com.ssm.cyclists.view.layout;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

import com.ssm.cyclists.R;
import com.ssm.cyclists.controller.CycleTrackerDetailFragment;
import com.ssm.cyclists.controller.CycleTrackerFragment;
import com.ssm.cyclists.controller.MainActivity;
import com.ssm.cyclists.model.CycleData;
import com.ssm.cyclists.model.CycleMateListViewAdapter;
import com.ssm.cyclists.model.CycleTrackerListViewAdapter;
import com.ssm.cyclists.model.UserData;
import com.ssm.cyclists.view.EnhancedListView;

import android.app.FragmentTransaction;
import android.os.Debug;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;



public class CycleTrackerLayout extends BaseFragmentLayout {
	
	static String TAG = CycleTrackerLayout.class.getSimpleName();
	
	private Button btnMenu;
	private EnhancedListView lvCycleList;
	CycleTrackerListViewAdapter Adapter;
	
	public CycleTrackerLayout(CycleTrackerFragment instance) {
		super(instance);
	}
	
	@Override
	public void createView(LayoutInflater inflater, ViewGroup container){
		view = inflater.inflate(R.layout.fragment_cycle_tracker, container, false);
	}
	
	public void init(){
		btnMenu 		= (Button)getView().findViewById(R.id.menu_button_cycletracker);
		btnMenu.setOnClickListener(buildMenuButtonListener());
		
		lvCycleList		= (EnhancedListView)getView().findViewById(R.id.lv_cycletracker);
		
		ArrayList<CycleData> arGeneral = new ArrayList<CycleData>();
		CycleData data = new CycleData();
		
		long time = System.currentTimeMillis(); 
		SimpleDateFormat dayTime = new SimpleDateFormat("yyyy-mm-dd hh:mm:ss");
		String tmpDate = dayTime.format(new Date(time));

		data.setDate(tmpDate);
		data.setConsume_calrories(127);
		arGeneral.add(data);

		Adapter = new CycleTrackerListViewAdapter(getView().getContext(),R.layout.cycletracker_listview_row,arGeneral);
		
		lvCycleList.setAdapter(Adapter);
		lvCycleList.setDismissCallback(buildOnDismissCallback());
				
		lvCycleList.enableSwipeToDismiss();
		
		lvCycleList.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				CycleTrackerDetailFragment detailFragment = new CycleTrackerDetailFragment();
				
				FragmentTransaction transaction = MainActivity.getInstasnce().getFragmentManager().beginTransaction();
				transaction.add(R.id.fragmen,tdetailFragment);
				transaction.hide(MainActivity.getInstasnce().getLayout().getActivated_fragment());
				transaction.show(detailFragment);
				MainActivity.getInstasnce().getLayout().setActivated_fragment(detailFragment);
				transaction.commit();
			}
		});
		
	}
	
	private EnhancedListView.OnDismissCallback buildOnDismissCallback(){
		return new EnhancedListView.OnDismissCallback() {
			
			@Override
			public EnhancedListView.Undoable onDismiss(EnhancedListView listView, final int position) {
				
				
				final CycleData item = (CycleData) Adapter.getItem(position);
				Adapter.remove(position);
                
				return new EnhancedListView.Undoable() {
                    @Override
                    public void undo() {
                    	Adapter.insert(item, position);
                    }
                };
			}
		};
	}
	
	private OnClickListener buildMenuButtonListener(){
		
		return new OnClickListener(){

			@Override
			public void onClick(View v) {
				((MainActivity)fragment.getActivity()).open_button(v);
			}
		};
	}
	
}
