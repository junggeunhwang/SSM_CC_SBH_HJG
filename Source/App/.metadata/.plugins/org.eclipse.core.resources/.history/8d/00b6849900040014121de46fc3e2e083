package com.ssm.cyclists.controller;

import org.json.JSONException;
import org.json.JSONObject;

import com.ssm.cyclists.R;
import com.ssm.cyclists.model.CruiseDataManager;

import android.location.Location;
import android.os.AsyncTask;
import android.util.Log;

public class WeatherUpdateAsyncTask extends AsyncTask<Location, Integer, Long> {

	public static String TAG = WeatherUpdateAsyncTask.class.getSimpleName();
	
	@Override
	protected Long doInBackground(Location... loc) {
		String strURL = String.format("http://api.openweathermap.org/data/2.5/weather?lat=%f&lon=%f",loc[0].getLatitude(),loc[0].getLongitude()); 
		String jsonString = CruiseDataManager.getInstance().DownloadHtml(strURL);
		try {
			JSONObject jsonObj = new JSONObject(jsonString);
			JSONObject weather = jsonObj.getJSONArray("weather").getJSONObject(0);
			Log.d(TAG, "id : "+weather.getInt("id") +" weather : " + weather.getString("main"));

			final JSONObject main = jsonObj.getJSONObject("main");
				
			int weather_id = weather.getInt("id");
			
			if(weather_id >=200 && weather_id < 300)		//Thunderstorm
			{
				CruiseDataManager.getInstance().setWeather(R.drawable.thunder);
			}
			else if(weather_id >=300 && weather_id < 400)	//Drizzle
			{
				CruiseDataManager.getInstance().setWeather(R.drawable.rainy);
			}
			else if(weather_id >=400 && weather_id < 500)	//empty
			{
			
			}
			else if(weather_id >=500 && weather_id < 600)	//Rain
			{
				CruiseDataManager.getInstance().setWeather(R.drawable.rainy);
			}
			else if(weather_id >=600 && weather_id < 700)	//Snow
			{
				CruiseDataManager.getInstance().setWeather(R.drawable.rainy);
			}
			else if(weather_id >=700 && weather_id < 800)	//Atmosphere
			{
				CruiseDataManager.getInstance().setWeather(R.drawable.cloudy);
			}
			else if(weather_id >=800 && weather_id < 900)	//Clouds
			{
				if(weather_id == 800){
					CruiseDataManager.getInstance().setWeather(R.drawable.sunny);
				}
				else{
					CruiseDataManager.getInstance().setWeather(R.drawable.cloudy);
				}
			}
			else
			{
				CruiseDataManager.getInstance().setWeather(R.drawable.sunny);
			}
			CruiseDataManager.getInstance().setHumidity(main.getInt("humidity"));
			CruiseDataManager.getInstance().setTemperature(((int)Math.round((main.getDouble("temp")-276.15))));
								
		} catch (JSONException e) {
			Log.e(TAG,e.getLocalizedMessage());
			e.printStackTrace();
			return 1L;
		}
	
		return 0L;
	}
	
	@Override
	protected void onPostExecute(Long result) {
		if(result == 1L) Log.e(TAG,"Weather update fail.");
		else{
			Log.d(TAG,"Weather update success.");
		}
		
		super.onPostExecute(result);
	}

}
