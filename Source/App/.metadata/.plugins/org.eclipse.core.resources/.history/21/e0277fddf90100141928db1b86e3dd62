package com.ssm.cyclists.controller;



import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import org.json.JSONException;
import org.json.JSONObject;



import com.ssm.cyclists.R;
import com.ssm.cyclists.view.layout.HomeLayout;

import android.app.Fragment;
import android.content.Context;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationManager;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;


public class HomeFragment extends Fragment {

	static String TAG = HomeLayout.class.getSimpleName();
	
	HomeLayout layout;
	
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		layout = new HomeLayout(this);
		layout.createView(inflater, container);
		layout.init();
		
		 Location lo = MainActivity.getInstasnce().getFragmentManager().findFragmentById(R.layout.fragment_map)
			
		 if(lo==null){
			 Log.d(TAG,"null location");
	         // Creating a criteria object to retrieve provider
	         Criteria criteria = new Criteria();
	     
	         // Getting the name of the best provider
	         String provider = ((LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE)).getBestProvider(criteria, true);
	         lo = new Location(provider);
	         lo.setLatitude(37.561372);
	         lo.setLongitude(127.037171);
		 }
		 
		 update_weather(lo);

		return layout.getView();
	}

	
	public void update_weather(final Location loc){
		
		if(getView().getVisibility() == View.VISIBLE)
		{
			new Thread(new Runnable(){

				@Override
				public void run() {
					String strURL = String.format("http://api.openweathermap.org/data/2.5/weather?lat=%f&lon=%f",loc.getLatitude(),loc.getLongitude()); 
					String jsonString = DownloadHtml(strURL);
					try {
						JSONObject jsonObj = new JSONObject(jsonString);
						JSONObject weather = jsonObj.getJSONArray("weather").getJSONObject(0);
						Log.d(TAG, "id : "+weather.getInt("id") +" weather : " + weather.getString("main"));

						final JSONObject main = jsonObj.getJSONObject("main");
							
						int weather_id = weather.getInt("id");
						
						if(weather_id >=200 && weather_id < 300)		//Thunderstorm
						{
							layout.setWeatherIcon(R.drawable.thunder);
						}
						else if(weather_id >=300 && weather_id < 400)	//Drizzle
						{
							layout.setWeatherIcon(R.drawable.rainy);
						}
						else if(weather_id >=400 && weather_id < 500)	//empty
						{
						
						}
						else if(weather_id >=500 && weather_id < 600)	//Rain
						{
							layout.setWeatherIcon(R.drawable.rainy);
						}
						else if(weather_id >=600 && weather_id < 700)	//Snow
						{
							layout.setWeatherIcon(R.drawable.rainy);
						}
						else if(weather_id >=700 && weather_id < 800)	//Atmosphere
						{
							layout.setWeatherIcon(R.drawable.cloudy);
						}
						else if(weather_id >=800 && weather_id < 900)	//Clouds
						{
							if(weather_id == 800){
								layout.setWeatherIcon(R.drawable.sunny);
							}
							else{
								layout.setWeatherIcon(R.drawable.cloudy);
							}
						}
						else
						{
							layout.setWeatherIcon(R.drawable.sunny);
						}
						
						layout.setHumidityText(main.getString("humidity"));
						
						layout.setTemperature(String.valueOf(Double.valueOf(main.getString("temp")).intValue()/10));
											
					} catch (JSONException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				
			}).start();
		}
	}
	

	private String DownloadHtml(String addr){
		StringBuilder html = new StringBuilder();
		
		try{
			URL url = new URL(addr);
			HttpURLConnection conn = (HttpURLConnection)url.openConnection();
			if(conn != null){
				conn.setConnectTimeout(10000);
				conn.setUseCaches(false);
				if(conn.getResponseCode() == HttpURLConnection.HTTP_OK){
					BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
					for(;;){
						String line = br.readLine();
						if(line == null)break;
						html.append(line + '\n');
					}
					br.close();
				}
				conn.disconnect();
			}
		
		}catch(Exception e){
			Log.e(TAG,e.getMessage());
		}
		return html.toString();
	}


	public HomeLayout getLayout() {
		return layout;
	}


	
}
