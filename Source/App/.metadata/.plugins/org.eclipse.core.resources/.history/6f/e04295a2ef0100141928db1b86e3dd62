package com.ssm.cyclists.model;

import java.io.IOException;
import java.util.List;
import java.util.Locale;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.ssm.cyclists.R;
import com.ssm.cyclists.controller.HomeFragment;
import com.ssm.cyclists.controller.MainActivity;
import com.ssm.cyclists.controller.MapViewFragment;

import android.app.Dialog;
import android.content.Context;
import android.location.Address;
import android.location.Criteria;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.util.Log;

public class MapManager {
	static MapManager instance;
	static String LOCATION_CHANGED = "com.ssm.cyclists.model.MapManager";
	
	private Geocoder geoCoder;
	private double speed;
	
	private MapManager() {
	}
	
	public void init(){
		geoCoder = new Geocoder(MainActivity.getInstasnce(),Locale.KOREA);
	}

	public static MapManager getInstance(){
		if(instance == null){
			instance = new MapManager(); 
		}
		return instance;
	}
	
	public String getAddress(Location loc){
		StringBuffer juso = new StringBuffer();
		
		List<Address> addresses;
		
		try {
			addresses = geoCoder.getFromLocation(loc.getLatitude(), loc.getLongitude(),1);
			for(Address addr: addresses){
				int index = addr.getMaxAddressLineIndex();
				for(int i = 0 ; i <= index ; i++){
					juso.append(addr.getAddressLine(i));
					juso.append(" ");
				}
					juso.append("\n");
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return juso.toString();		
	}
}
