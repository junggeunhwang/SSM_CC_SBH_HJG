package com.ssm.cyclists.controller;


import java.io.IOException;
import java.security.spec.MGF1ParameterSpec;
import java.util.List;
import java.util.Locale;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.model.LatLng;
import com.ssm.cyclists.R;
import com.ssm.cyclists.view.layout.MapViewLayout;

import android.app.Dialog;
import android.app.Fragment;
import android.content.Context;
import android.location.Address;
import android.location.Criteria;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;


public class MapViewFragment extends Fragment {

	private MapViewLayout layout;
	private Geocoder geoCoder;
	
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);

		
	}
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		
		layout = new MapViewLayout(this);
		layout.createView(inflater, container);
		layout.init();
		geoCoder = new Geocoder(layout.getView().getContext(),Locale.KOREA);

		return layout.getView();
	}
	
	
	
	
	

	public void moveMapCamenra(Location location){
		layout.moveMapCamenra(location);
	}

	public MapViewLayout getLayout() {
		return layout;
	}
	
	public String getAddress(Location loc){
		StringBuffer juso = new StringBuffer();
		
		List<Address> addresses;
		
		try {
			addresses = geoCoder.getFromLocation(loc.getLatitude(), loc.getLongitude(),1);
			for(Address addr: addresses){
				int index = addr.getMaxAddressLineIndex();
				for(int i = 0 ; i <= index ; i++){
					juso.append(addr.getAddressLine(i));
					juso.append(" ");
				}
					juso.append("\n");
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return juso.toString();		
	}

	


	public void setCurrent_location(Location current_location) {
		this.current_location = current_location;
	}

	@Override
	public void onDestroyView() {
		
		super.onDestroyView();
	}
}
