package com.ssm.view;

import java.io.IOException;
import java.io.InputStream;

import android.content.res.AssetManager;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.Typeface;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import com.example.cyclists.R;
import com.ssm.controller.HomeFragment;

public class HomeLayout extends BaseFragmentLayout {
	
	Button menubutton;
	
	TextView tvUserID;
	TextView tvLocation;
	TextView tvWeekDay;
	TextView tvTemperature;
	TextView tvRainPercent;
	
	public HomeLayout(HomeFragment instance) {
		super(instance);
	}
	
	public void init(){
		

		
		tvUserID = (TextView)getView().findViewById(R.id.user_id_home);
		tvLocation = (TextView)getView().findViewById(R.id.location_home);
		tvWeekDay = (TextView)getView().findViewById(R.id.weekday_home);
		tvTemperature = (TextView)getView().findViewById(R.id.temperature_home);
		tvRainPercent = (TextView)getView().findViewById(R.id.rainpercent_home);
		
		AssetManager asset = fragment.getActivity().getAssets();
		
		Typeface typeface = Typeface.createFromAsset(fragment.getActivity().getAssets(),"fonts/helvetica.ttf");
		tvUserID.setTypeface(typeface);
		tvLocation.setTypeface(typeface);
		tvWeekDay.setTypeface(typeface);
		
		typeface = Typeface.createFromAsset(fragment.getActivity().getAssets(),"fonts/nanum_gothic.ttf");
		tvTemperature.setTypeface(typeface);
		tvRainPercent.setTypeface(typeface);
		
		
		
		
		
	}
	@Override
	public void createView(LayoutInflater inflater, ViewGroup container){
		view = inflater.inflate(R.layout.fragment_home, container, false);
	}
	
	private OnClickListener buildButtonClickListner(){
		
		return new Button.OnClickListener(){
				
					@Override
					public void onClick(View v) {

					}
				};
	}
	
	/*
	  * Making image in circular shape
	  */
	 public Bitmap getRoundedShape(Bitmap scaleBitmapImage) {
	  // TODO Auto-generated method stub
	  int targetWidth = 50;
	  int targetHeight = 50;
//	  Bitmap targetBitmap = Bitmap.createBitmap(targetWidth, 
//	                            targetHeight,Bitmap.Config.ARGB_8888);
//	  
//	  Canvas canvas = new Canvas(targetBitmap);
//	  Path path = new Path();
//	  path.addCircle(((float) targetWidth - 1) / 2,
//	  ((float) targetHeight - 1) / 2,
//	  (Math.min(((float) targetWidth), 
//	                ((float) targetHeight)) / 2),
//	          Path.Direction.CCW);
//	  
//	                canvas.clipPath(path);
//	  Bitmap sourceBitmap = scaleBitmapImage;
	
	  Bitmap targetBitmap = Bitmap.createBitmap(targetWidth, targetHeight,Bitmap.Config.ARGB_8888);
	  Canvas canvas = new Canvas(targetBitmap);
	  Path path = new Path();
	  path.addCircle(((float) targetWidth) / 2,((float) targetHeight) / 2,(Math.min(((float) targetWidth),
			  ((float) targetHeight)) / 2),Path.Direction.CW);
	  Paint paint = new Paint(); 
	  paint.setColor(Color.GRAY); 
	  //paint.setStyle(Paint.Style.STROKE);
	  paint.setStyle(Paint.Style.FILL);
	  paint.setAntiAlias(true);
	  paint.setDither(true);
	  paint.setFilterBitmap(true);
	  canvas.drawOval(new RectF(0, 0, targetWidth, targetHeight), paint) ;
	  //paint.setColor(Color.TRANSPARENT); 
	  canvas.clipPath(path);
	  Bitmap sourceBitmap = scaleBitmapImage;
	  canvas.drawBitmap(sourceBitmap, new Rect(0, 0, sourceBitmap.getWidth(),
			  sourceBitmap.getHeight()), new RectF(0, 0, targetWidth,
			  targetHeight), paint);
	  
	  
	  canvas.drawBitmap(sourceBitmap,new Rect(0, 0, sourceBitmap.getWidth(),
	    sourceBitmap.getHeight()),new Rect(0, 0, targetWidth,
	    targetHeight), null);
	  
	  return targetBitmap;
	 }

}
