package com.ssm.cyclists.model;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import com.facebook.HttpMethod;
import com.facebook.LoggingBehavior;
import com.facebook.Request;
import com.facebook.Response;
import com.facebook.Session;
import com.facebook.SessionState;
import com.facebook.Settings;
import com.facebook.model.GraphUser;
import com.ssm.cyclists.controller.MainActivity;

import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.Signature;
import android.util.Base64;
import android.util.Log;



public class SNSLogin {

	private static final String URL_PREFIX_FRIENDS = "https://graph.facebook.com/me/friends?access_token=";
	private Session.StatusCallback statusCallback = new SessionStatusCallback();
	
	
    private void getHashKey()
    {
            PackageInfo info;
            try {
            info = MainActivity.getInstasnce().getPackageManager().getPackageInfo("com.example.facebooklogintest", PackageManager.GET_SIGNATURES);
            for (Signature signature : info.signatures) {MessageDigest md;
            md = MessageDigest.getInstance("SHA");
            md.update(signature.toByteArray());
                       //String something = new String(Base64.encode(md.digest(), 0));
                         String something = new String(Base64.encode(md.digest(),0));
                       Log.e("** Hash Key", something);
            }
            }
            catch (NameNotFoundException e1) {
            Log.e("name not found", e1.toString());
            }

            catch (NoSuchAlgorithmException e) {
            Log.e("no such an algorithm", e.toString());
            }
            catch (Exception e){
            Log.e("exception", e.toString());
            }

    }
    
    
    private class SessionStatusCallback implements Session.StatusCallback {
        @Override
        public void call(Session session, SessionState state, Exception exception) {
            
        }
    }
}
