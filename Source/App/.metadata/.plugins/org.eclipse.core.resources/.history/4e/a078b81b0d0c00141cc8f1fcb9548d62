package com.ssm.cyclists.view.layout;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Calendar;

import net.simonvt.menudrawer.MenuDrawer;

import com.ssm.cyclists.R;
import com.ssm.cyclists.controller.activity.MainActivity;
import com.ssm.cyclists.controller.communication.https.Protocol;
import com.ssm.cyclists.controller.fragment.CheckableCycleMateFragment;
import com.ssm.cyclists.controller.fragment.CruiseContainerFragment;
import com.ssm.cyclists.controller.fragment.CycleTrackerDetailGraphFragment;
import com.ssm.cyclists.controller.fragment.HomeFragment;
import com.ssm.cyclists.controller.manager.CruiseDataManager;
import com.ssm.cyclists.controller.manager.DataBaseManager;
import com.ssm.cyclists.controller.manager.ResourceManager;
import com.ssm.cyclists.controller.manager.SettingsDataManager;
import com.ssm.cyclists.model.UserData;
import com.ssm.cyclists.view.ImageViewRounded;

import android.app.FragmentTransaction;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.BitmapDrawable;
import android.sax.StartElementListener;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

public class HomeLayout extends BaseFragmentLayout {
	
	static String TAG = HomeLayout.class.getSimpleName();
	private static final String DEST_DIR  = "/storage/emulated/legacy/Cyclists";
	private static final String DEST_DIR_PROFILE  = DEST_DIR+ "/Profile" ;
	
	private Button btnStartToBicycle;
	
	private TextView tvUserID;
	private TextView tvLocation;
	private TextView tvWeekDay;
	private TextView tvTemperature;
	private TextView tvHumidity;
	private TextView tvAppName;
	
	private ImageViewRounded ivProfileImage;
	private ImageView ivWeatherIcon;
	private ImageView ivLocationIcon;
	
	private LinearLayout lyBackground;
	
	public HomeLayout(HomeFragment instance) {
		super(instance);
	}
	
	public void init(){
		
		btnStartToBicycle = (Button)getView().findViewById(R.id.start_to_bicycle_home);
		
		tvAppName = (TextView)getView().findViewById(R.id.app_name_home);
		tvUserID = (TextView)getView().findViewById(R.id.user_id_home);
		tvLocation = (TextView)getView().findViewById(R.id.location_home);
		tvWeekDay = (TextView)getView().findViewById(R.id.weekday_home);
		tvTemperature = (TextView)getView().findViewById(R.id.temperature_home);
		tvHumidity = (TextView)getView().findViewById(R.id.humidity_home);
		ivProfileImage = (ImageViewRounded)getView().findViewById(R.id.profile_image);
		ivWeatherIcon = (ImageView)getView().findViewById(R.id.weather_icon_image);
		ivLocationIcon = (ImageView)getView().findViewById(R.id.location_icon_home);
		lyBackground = (LinearLayout)getView().findViewById(R.id.home_background_home);
		
		ivProfileImage.setImageResource(R.drawable.default_profile);
		
		tvAppName.setTypeface(ResourceManager.getInstance().getFont("helvetica"));
		tvUserID.setTypeface(ResourceManager.getInstance().getFont("helvetica"));
		tvLocation.setTypeface(ResourceManager.getInstance().getFont("helvetica"));
		tvWeekDay.setTypeface(ResourceManager.getInstance().getFont("helvetica"));
		
		tvTemperature.setTypeface(ResourceManager.getInstance().getFont("helvetica"));
		tvHumidity.setTypeface(ResourceManager.getInstance().getFont("nanum_gothic"));
		
		if(SettingsDataManager.getInstance().isStart_stopBicycleFlag()==false)
		{
			btnStartToBicycle.setText("Start Cycling");
		}
		else{
			btnStartToBicycle.setText("Stop Cycling");
		}
		btnStartToBicycle.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
		
				if(SettingsDataManager.getInstance().isStart_stopBicycleFlag()==false)
				{
					CheckableCycleMateFragment checkableCycleMateFragment = new CheckableCycleMateFragment();
					FragmentTransaction transaction = MainActivity.getInstasnce().getFragmentManager().beginTransaction();
					transaction.replace(R.id.fragment,checkableCycleMateFragment);
					transaction.addToBackStack(null);
					transaction.commit();
					MainActivity.getInstasnce().getLayout().setActivated_fragment(checkableCycleMateFragment);
				}
				else{
					MainActivity.getInstasnce().getLayout().getmMenuDrawer().setTouchMode(MenuDrawer.TOUCH_MODE_BEZEL);
					MainActivity.getInstasnce().getLayout().getmCruiseContainerFragment().setViewPagerEnable(false);
					//자전거타기 종료
					SettingsDataManager.getInstance().setStart_stopBicycleFlag(false);
					new Thread(new Runnable() {
						
						@Override
						public void run() {
							CruiseDataManager.getInstance().setCycle_data_list(DataBaseManager.getInstance().selectCruiseData());	
						}
					}).start();;
					
					MainActivity.getInstasnce().stopCruiseInfoRecord();
					Protocol.getInstance().ExitRoom(SettingsDataManager.getInstance().getMe().getUniqueID());
					CruiseDataManager.getInstance().clear();
				}
				convertStartBtn();
				
			}
		});
	
		Calendar today = Calendar.getInstance();
		
		switch(today.get(Calendar.DAY_OF_WEEK))
		{
		case Calendar.SUNDAY:
			tvWeekDay.setText("Sunday");
			break;
		case Calendar.MONDAY:
			tvWeekDay.setText("Monday");
			break;
		case Calendar.TUESDAY:
			tvWeekDay.setText("Tuesday");
			break;
		case Calendar.WEDNESDAY:
			tvWeekDay.setText("Wednesday");
			break;
		case Calendar.THURSDAY:
			tvWeekDay.setText("Thursday");
			break;
		case Calendar.FRIDAY:
			tvWeekDay.setText("Friday");
			break;
		case Calendar.SATURDAY:
			tvWeekDay.setText("Saturday");
			break;
		}
		
		updateHomeInfo();
		updateColor();
	}
	@Override
	public void createView(LayoutInflater inflater, ViewGroup container){
		view = inflater.inflate(R.layout.fragment_home, container, false);
	}
	

	
	/*
	  * Making image in circular shape
	  */
	 public Bitmap getRoundedShape(Bitmap scaleBitmapImage) {

	  int targetWidth = 50;
	  int targetHeight = 50;

	
	  Bitmap targetBitmap = Bitmap.createBitmap(targetWidth, targetHeight,Bitmap.Config.ARGB_8888);
	  Canvas canvas = new Canvas(targetBitmap);
	  Path path = new Path();
	  path.addCircle(((float) targetWidth) / 2,((float) targetHeight) / 2,(Math.min(((float) targetWidth),
			  ((float) targetHeight)) / 2),Path.Direction.CW);
	  Paint paint = new Paint(); 
	  paint.setColor(Color.GRAY); 

	  paint.setStyle(Paint.Style.FILL);
	  paint.setAntiAlias(true);
	  paint.setDither(true);
	  paint.setFilterBitmap(true);
	  canvas.drawOval(new RectF(0, 0, targetWidth, targetHeight), paint) ;
 
	  canvas.clipPath(path);
	  Bitmap sourceBitmap = scaleBitmapImage;
	  canvas.drawBitmap(sourceBitmap, new Rect(0, 0, sourceBitmap.getWidth(),
			  sourceBitmap.getHeight()), new RectF(0, 0, targetWidth,
			  targetHeight), paint);
	  
	  
	  canvas.drawBitmap(sourceBitmap,new Rect(0, 0, sourceBitmap.getWidth(),
	    sourceBitmap.getHeight()),new Rect(0, 0, targetWidth,
	    targetHeight), null);
	  
	  return targetBitmap;
	 }


	 public void updateHomeInfo(){
		 setTemperature(String.valueOf(CruiseDataManager.getInstance().getTemperature()));
		 setHumidityText(String.valueOf(CruiseDataManager.getInstance().getHumidity()));
		 setWeatherIcon(CruiseDataManager.getInstance().getWeather());
		 setAddress(CruiseDataManager.getInstance().getAddress());
		 setID();
		 setProfile();
	 }

	 public void setProfile(){
		 if(ivProfileImage!=null){
			 ivProfileImage.post(new Runnable() {
				
				@Override
				public void run() {
					UserData me = SettingsDataManager.getInstance().getMe();
					if(SettingsDataManager.getInstance().isFacebookConnectd() || SettingsDataManager.getInstance().isTwitterConnectd() || SettingsDataManager.getInstance().isInstagramConnectd())
					{
						//file -> byte[]
						File profile = new File(DEST_DIR_PROFILE);
                    	try {
                    		FileInputStream fis = new FileInputStream(profile);
                    		byte[] content = new byte[(int) profile.length()];
							fis = new FileInputStream(profile);
							fis.read(content);
							//byte[] -> bitmap
							Bitmap profileImg = BitmapFactory.decodeByteArray(content , 0, content .length);
							me.setProfileImg(profileImg);
						} catch (FileNotFoundException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						} catch (IOException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
					if(me.getProfileImg()!=null){
						ivProfileImage.setImageBitmap(me.getProfileImg());
					}
					else{
						ivProfileImage.setImageBitmap(((BitmapDrawable)MainActivity.getInstasnce().getResources().getDrawable(R.drawable.default_profile)).getBitmap());
					}
				}
			});
		 }
	 }
	 public void setID(){
		 if(tvUserID!=null){
			 tvUserID.post(new Runnable() {
				
				@Override
				public void run() {
					UserData me = SettingsDataManager.getInstance().getMe();
						tvUserID.setText(me.getUniqueID());
						tvUserID.setText(me.getUserName());	
				}
			});
		 }
	 }
	 
	 public void setAddress(final String address){
 		 if(tvLocation!=null)
		 {
			 tvLocation.post(new Runnable() {
				
				@Override
				public void run() {
					tvLocation.setText(address);
				}
			});
		 }
	 }
	 
	 public void setTemperature(final String temperature){
		 if(ivWeatherIcon!=null)
		 {
			 tvTemperature.post(new Runnable() {
					
					@Override
					public void run() {
						tvTemperature.setText(temperature);
					}
				});
		 }
	 }
	 
	 public void setHumidityText(final String humidity){
		 if(ivWeatherIcon!=null)
		 {
			 tvHumidity.post(new Runnable() {
					
					@Override
					public void run() {
						tvHumidity.setText(humidity);
					}
				});
		 }
	 }

	 public void setWeatherIcon(final int resID){
		 if(ivWeatherIcon!=null)
		 {
			 ivWeatherIcon.post(new Runnable() {
					
					@Override
					public void run() {
						ivWeatherIcon.setImageResource(resID);
					}
				});
		 }
	 }
	 
	 public void convertStartBtn(){
		 if(btnStartToBicycle.getText().equals("Start Cycling"))
			 btnStartToBicycle.setText("Stop Cycling");
		 else if(btnStartToBicycle.getText().equals("Stop Cycling"))
			 btnStartToBicycle.setText("Start Cycling");
			 
	 }
	 
	 public void updateColor(){
	
		 if(SettingsDataManager.getInstance().getThemeColor().equals("pink")){
				lyBackground.setBackgroundColor(MainActivity.getInstasnce().getResources().getColor(R.color.bk_color_pink_heavy));
				btnStartToBicycle.setBackground(MainActivity.getInstasnce().getResources().getDrawable(R.drawable.start_bicycle_btn_bg_pink));
				ivLocationIcon.setBackground(MainActivity.getInstasnce().getResources().getDrawable(R.drawable.location_icon_pink));
		 }else if(SettingsDataManager.getInstance().getThemeColor().equals("green")){
				lyBackground.setBackgroundColor(MainActivity.getInstasnce().getResources().getColor(R.color.bk_color_green_heavy));
				btnStartToBicycle.setBackground(MainActivity.getInstasnce().getResources().getDrawable(R.drawable.start_bicycle_btn_bg_green));
				ivLocationIcon.setBackground(MainActivity.getInstasnce().getResources().getDrawable(R.drawable.location_icon_green));
		 }else if(SettingsDataManager.getInstance().getThemeColor().equals("gray")){
				lyBackground.setBackgroundColor(MainActivity.getInstasnce().getResources().getColor(R.color.bk_color_gray_heavy));
				btnStartToBicycle.setBackground(MainActivity.getInstasnce().getResources().getDrawable(R.drawable.start_bicycle_btn_bg_gray));
				ivLocationIcon.setBackground(MainActivity.getInstasnce().getResources().getDrawable(R.drawable.location_icon_gray));
			}
		}
}
